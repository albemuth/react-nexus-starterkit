"use strict";

require("6to5/polyfill");
var Promise = require("bluebird");
/* jshint ignore:start */
// Escape double-quotes
var X = function (x) {
  return x.replace(/\"/g, "\\\"");
};
var DEV = (process.env.NODE_ENV === "development");

module.exports = function (_ref) {
  var title = _ref.title;
  var description = _ref.description;
  var canonical = _ref.canonical;
  var lang = _ref.lang;
  var rootHtml = _ref.rootHtml;
  var serializedFlux = _ref.serializedFlux;
  var serializedHeaders = _ref.serializedHeaders;
  return "<!doctype html" + (lang ? " lang=\"" + X(lang) + "\"" : "") + ">\r\n  <html>\r\n    <head>\r\n      <meta charset=\"utf-8\">\r\n      <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n      " + (description ? "<meta name=\"description\" content=\"" + X(description) + "\">" : "") + "\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n      <title>" + (title || "") + "</title>\r\n      <link rel=\"stylesheet\" type=\"text/css\" href=\"/p" + (DEV ? "" : ".min") + ".css\">\r\n      <link href='http://fonts.googleapis.com/css?family=Roboto' rel='stylesheet' type='text/css'>\r\n      <link href='http://fonts.googleapis.com/css?family=Open+Sans+Condensed:300' rel='stylesheet' type='text/css'>\r\n      <link href='http://fonts.googleapis.com/css?family=Open+Sans' rel='stylesheet' type='text/css'>\r\n    </head>\r\n    <body>\r\n      <div id=\"__ReactNexusRoot\">\r\n        " + rootHtml + "\r\n      </div>\r\n      <script type=\"text/javascript\">\r\n        (function(w, d, i, f, h, g) {\r\n          w.__ReactNexus = { serializedFlux: f, serializedHeaders: h, guid: g, rootElement: d.getElementById(i) };\r\n        }(window, document, '__ReactNexusRoot', '" + serializedFlux + "', '" + serializedHeaders + "', '" + guid + "'))\r\n      </script>\r\n      <script type=\"text/javascript\" src=\"/p" + (DEV ? "" : ".min") + ".js\">\r\n    </body>\r\n  </html>\r\n  ";
};
/* jshint ignore:end */
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInRlbXBsYXRlLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsT0FBTyxDQUFDLGVBQWUsQ0FBQyxDQUFDO0FBQ3pCLElBQU0sT0FBTyxHQUFHLE9BQU8sQ0FBQyxVQUFVLENBQUMsQ0FBQzs7O0FBR3BDLElBQU0sQ0FBQyxHQUFHLFVBQUMsQ0FBQztTQUFLLENBQUMsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLE1BQUssQ0FBQztDQUFBLENBQUM7QUFDekMsSUFBSSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsS0FBSyxhQUFhLENBQUMsQ0FBQzs7QUFFbkQsTUFBTSxDQUFDLE9BQU8sR0FBRztNQUFHLEtBQUssUUFBTCxLQUFLO01BQUUsV0FBVyxRQUFYLFdBQVc7TUFBRSxTQUFTLFFBQVQsU0FBUztNQUFFLElBQUksUUFBSixJQUFJO01BQUUsUUFBUSxRQUFSLFFBQVE7TUFBRSxjQUFjLFFBQWQsY0FBYztNQUFFLGlCQUFpQixRQUFqQixpQkFBaUI7NEJBQ2pGLENBQUEsSUFBSSxnQkFBYSxDQUFDLENBQUMsSUFBSSxDQUFDLFVBQU0sRUFBRSxDQUFBLGtKQUszQyxDQUFBLFdBQVcsNkNBQXdDLENBQUMsQ0FBQyxXQUFXLENBQUMsV0FBTyxFQUFFLENBQUEsNEdBR25FLEtBQUssSUFBSSxFQUFFLCtFQUM2QixDQUFBLEdBQUcsR0FBRyxFQUFFLEdBQUUsTUFBTSxDQUFBLHFhQU83RCxRQUFRLHVSQU1pQyxjQUFjLFlBQU8saUJBQWlCLFlBQU8sSUFBSSxpRkFFdEQsQ0FBQSxHQUFHLEdBQUcsRUFBRSxHQUFFLE1BQU0sQ0FBQTtDQUczRCxDQUFDIiwiZmlsZSI6InRlbXBsYXRlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoganNoaW50IGlnbm9yZTpzdGFydCAqL1xyXG4vLyBFc2NhcGUgZG91YmxlLXF1b3Rlc1xyXG5jb25zdCBYID0gKHgpID0+IHgucmVwbGFjZSgvXFxcIi9nLCAnXFxcXFwiJyk7XHJcbmxldCBERVYgPSAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAoeyB0aXRsZSwgZGVzY3JpcHRpb24sIGNhbm9uaWNhbCwgbGFuZywgcm9vdEh0bWwsIHNlcmlhbGl6ZWRGbHV4LCBzZXJpYWxpemVkSGVhZGVycyB9KSA9PlxyXG4gIGA8IWRvY3R5cGUgaHRtbCR7bGFuZyA/IGAgbGFuZz1cIiR7WChsYW5nKX1cImAgOiAnJ30+XHJcbiAgPGh0bWw+XHJcbiAgICA8aGVhZD5cclxuICAgICAgPG1ldGEgY2hhcnNldD1cInV0Zi04XCI+XHJcbiAgICAgIDxtZXRhIGh0dHAtZXF1aXY9XCJYLVVBLUNvbXBhdGlibGVcIiBjb250ZW50PVwiSUU9ZWRnZVwiPlxyXG4gICAgICAke2Rlc2NyaXB0aW9uID8gYDxtZXRhIG5hbWU9XCJkZXNjcmlwdGlvblwiIGNvbnRlbnQ9XCIke1goZGVzY3JpcHRpb24pfVwiPmAgOiAnJ31cclxuICAgICAgPG1ldGEgbmFtZT1cInZpZXdwb3J0XCIgY29udGVudD1cIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xXCI+XHJcbiAgICAgIDx0aXRsZT4ke3RpdGxlIHx8IFwiXCJ9PC90aXRsZT5cclxuICAgICAgPGxpbmsgcmVsPVwic3R5bGVzaGVldFwiIHR5cGU9XCJ0ZXh0L2Nzc1wiIGhyZWY9XCIvcCR7REVWID8gJyc6ICcubWluJ30uY3NzXCI+XHJcbiAgICAgIDxsaW5rIGhyZWY9J2h0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PVJvYm90bycgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2Nzcyc+XHJcbiAgICAgIDxsaW5rIGhyZWY9J2h0dHA6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3M/ZmFtaWx5PU9wZW4rU2FucytDb25kZW5zZWQ6MzAwJyByZWw9J3N0eWxlc2hlZXQnIHR5cGU9J3RleHQvY3NzJz5cclxuICAgICAgPGxpbmsgaHJlZj0naHR0cDovL2ZvbnRzLmdvb2dsZWFwaXMuY29tL2Nzcz9mYW1pbHk9T3BlbitTYW5zJyByZWw9J3N0eWxlc2hlZXQnIHR5cGU9J3RleHQvY3NzJz5cclxuICAgIDwvaGVhZD5cclxuICAgIDxib2R5PlxyXG4gICAgICA8ZGl2IGlkPVwiX19SZWFjdE5leHVzUm9vdFwiPlxyXG4gICAgICAgICR7cm9vdEh0bWx9XHJcbiAgICAgIDwvZGl2PlxyXG4gICAgICA8c2NyaXB0IHR5cGU9XCJ0ZXh0L2phdmFzY3JpcHRcIj5cclxuICAgICAgICAoZnVuY3Rpb24odywgZCwgaSwgZiwgaCwgZykge1xyXG4gICAgICAgICAgdy5fX1JlYWN0TmV4dXMgPSB7IHNlcmlhbGl6ZWRGbHV4OiBmLCBzZXJpYWxpemVkSGVhZGVyczogaCwgZ3VpZDogZywgcm9vdEVsZW1lbnQ6IGQuZ2V0RWxlbWVudEJ5SWQoaSkgfTtcclxuICAgICAgICB9KHdpbmRvdywgZG9jdW1lbnQsICdfX1JlYWN0TmV4dXNSb290JywgJyR7c2VyaWFsaXplZEZsdXh9JywgJyR7c2VyaWFsaXplZEhlYWRlcnN9JywgJyR7Z3VpZH0nKSlcclxuICAgICAgPC9zY3JpcHQ+XHJcbiAgICAgIDxzY3JpcHQgdHlwZT1cInRleHQvamF2YXNjcmlwdFwiIHNyYz1cIi9wJHtERVYgPyAnJzogJy5taW4nfS5qc1wiPlxyXG4gICAgPC9ib2R5PlxyXG4gIDwvaHRtbD5cclxuICBgO1xyXG4vKiBqc2hpbnQgaWdub3JlOmVuZCAqL1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=